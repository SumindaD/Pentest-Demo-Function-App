package pentest.demo;

import com.microsoft.azure.functions.ExecutionContext;
import com.microsoft.azure.functions.HttpMethod;
import com.microsoft.azure.functions.HttpRequestMessage;
import com.microsoft.azure.functions.HttpResponseMessage;
import com.microsoft.azure.functions.HttpStatus;
import com.microsoft.azure.functions.annotation.AuthorizationLevel;
import com.microsoft.azure.functions.annotation.FunctionName;
import com.microsoft.azure.functions.annotation.HttpTrigger;

import java.util.Optional;

import java.sql.*;

public class Function {
    @FunctionName("HttpExample")
    public HttpResponseMessage run(
            @HttpTrigger(
                name = "req",
                methods = {HttpMethod.GET, HttpMethod.POST},
                authLevel = AuthorizationLevel.ANONYMOUS)
                HttpRequestMessage<Optional<String>> request,
            final ExecutionContext context) {
        String result = "";
        Connection connection;
        try {
            connection = DriverManager.getConnection("{Your_SQL_JDBC_Connection_Sring}");
            PreparedStatement readStatement = connection.prepareStatement("SELECT * FROM [SalesLT].[Customer] WHERE CustomerID = 1;");
            ResultSet resultSet = readStatement.executeQuery();
            if (!resultSet.next()) {
                return request.createResponseBuilder(HttpStatus.OK).body("No Data").build();
            }
            result = resultSet.getString("FirstName");
            connection.close();
        } catch (SQLException e) {
            context.getLogger().info(e.getMessage());
            return request.createResponseBuilder(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage()).build();
        } catch (Exception e){
            context.getLogger().info(e.getMessage());
            return request.createResponseBuilder(HttpStatus.INTERNAL_SERVER_ERROR).body(e.getMessage()).build();
        }
        return request.createResponseBuilder(HttpStatus.OK).body(result).build();
    }
}
